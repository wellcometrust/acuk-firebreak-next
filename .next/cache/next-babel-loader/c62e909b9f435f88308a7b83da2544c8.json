{"ast":null,"code":"import Error from 'next/error';\nimport Router from 'next/router';\nexport default Error;\n\nError.getInitialProps = ({\n  res,\n  err,\n  asPath\n}) => {\n  const statusCode = res ? res.statusCode : err ? err.statusCode : 404;\n  /**\n   * Handle errors with trailing slash in URL.\n   *\n   * This generally happens if you navigate to a page with a trailing slash,\n   * and then force a hard refresh on the page.\n   *\n   * @see https://github.com/zeit/next.js/issues/5214#issuecomment-564724632\n   */\n\n  if (statusCode && statusCode === 404) {\n    if (asPath.match(/\\/$/)) {\n      const withoutTrailingSlash = asPath.substr(0, asPath.length - 1);\n\n      if (res) {\n        res.writeHead(302, {\n          Location: withoutTrailingSlash\n        });\n        res.end();\n      } else {\n        Router.push(withoutTrailingSlash);\n      }\n    }\n  }\n\n  return {\n    statusCode\n  };\n};","map":{"version":3,"sources":["/www/sites/firebreak-nextjs/src/pages/_error.tsx"],"names":["Error","Router","getInitialProps","res","err","asPath","statusCode","match","withoutTrailingSlash","substr","length","writeHead","Location","end","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,eAAeD,KAAf;;AAEAA,KAAK,CAACE,eAAN,GAAwB,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,GAAP;AAAYC,EAAAA;AAAZ,CAAD,KAA0B;AAChD,QAAMC,UAAU,GAAGH,GAAG,GAAGA,GAAG,CAACG,UAAP,GAAoBF,GAAG,GAAGA,GAAG,CAACE,UAAP,GAAoB,GAAjE;AAEA;;;;;;;;;AAQA,MAAIA,UAAU,IAAIA,UAAU,KAAK,GAAjC,EAAsC;AACpC,QAAID,MAAM,CAACE,KAAP,CAAa,KAAb,CAAJ,EAAyB;AACvB,YAAMC,oBAAoB,GAAGH,MAAM,CAACI,MAAP,CAAc,CAAd,EAAiBJ,MAAM,CAACK,MAAP,GAAgB,CAAjC,CAA7B;;AACA,UAAIP,GAAJ,EAAS;AACPA,QAAAA,GAAG,CAACQ,SAAJ,CAAc,GAAd,EAAmB;AACjBC,UAAAA,QAAQ,EAAEJ;AADO,SAAnB;AAGAL,QAAAA,GAAG,CAACU,GAAJ;AACD,OALD,MAKO;AACLZ,QAAAA,MAAM,CAACa,IAAP,CAAYN,oBAAZ;AACD;AACF;AACF;;AAED,SAAO;AAAEF,IAAAA;AAAF,GAAP;AACD,CA1BD","sourcesContent":["import Error from 'next/error'\nimport Router from 'next/router'\n\nexport default Error\n\nError.getInitialProps = ({ res, err, asPath }) => {\n  const statusCode = res ? res.statusCode : err ? err.statusCode : 404\n\n  /**\n   * Handle errors with trailing slash in URL.\n   *\n   * This generally happens if you navigate to a page with a trailing slash,\n   * and then force a hard refresh on the page.\n   *\n   * @see https://github.com/zeit/next.js/issues/5214#issuecomment-564724632\n   */\n  if (statusCode && statusCode === 404) {\n    if (asPath.match(/\\/$/)) {\n      const withoutTrailingSlash = asPath.substr(0, asPath.length - 1)\n      if (res) {\n        res.writeHead(302, {\n          Location: withoutTrailingSlash\n        })\n        res.end()\n      } else {\n        Router.push(withoutTrailingSlash)\n      }\n    }\n  }\n\n  return { statusCode }\n}\n"]},"metadata":{},"sourceType":"module"}