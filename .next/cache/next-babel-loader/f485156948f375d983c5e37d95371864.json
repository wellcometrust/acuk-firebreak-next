{"ast":null,"code":"var _jsxFileName = \"/www/sites/firebreak-nextjs/src/pages/jobs/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../layouts/default';\nimport TitleBanner from '../../components/TitleBanner';\n\nconst Job = ({\n  title,\n  sections\n}) => {\n  var _body;\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(TitleBanner, {\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), body && __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: (_body = body) === null || _body === void 0 ? void 0 : _body.value\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), sections.map(({\n    attributes\n  }, key) => __jsx(\"section\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, attributes.field_title))));\n};\n\nJob.getInitialProps = async context => {\n  const {\n    id\n  } = context.query; // fetch `Job`\n\n  const response = await fetch(`${process.env.API_ROOT}/jobs/${id}`);\n  const {\n    data\n  } = await response.json();\n  const {\n    title,\n    field_job_section\n  } = data.attributes; // fetch `sections` from field_collection endpoint\n\n  const sectionsResponse = await fetch(`http://127.0.0.1:8888/jsonapi/field_collection_item/field_job_section/`);\n  const {\n    data: sections\n  } = await sectionsResponse.json();\n  return {\n    title,\n    sections\n  };\n};\n\nexport default Job;","map":{"version":3,"sources":["/www/sites/firebreak-nextjs/src/pages/jobs/[id].tsx"],"names":["fetch","Layout","TitleBanner","Job","title","sections","body","__html","value","map","attributes","key","field_title","getInitialProps","context","id","query","response","process","env","API_ROOT","data","json","field_job_section","sectionsResponse"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;;AAcA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD;AAAA;;AAAA,SACV,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,KAAK,EAAED,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGE,IAAI,IAAI;AAAK,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,WAAED,IAAF,0CAAE,MAAME;AAAhB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFX,EAIIH,QAAQ,CAACI,GAAT,CAAa,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAiBC,GAAjB,KACX;AAAS,IAAA,GAAG,EAAEA,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,UAAU,CAACE,WAAhB,CADF,CADF,CAJJ,CADU;AAAA,CAAZ;;AAcAT,GAAG,CAACU,eAAJ,GAAsB,MAAOC,OAAP,IAAwB;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,KAAvB,CAD4C,CAG5C;;AACA,QAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAAE,GAAEkB,OAAO,CAACC,GAAR,CAAYC,QAAS,SAAQL,EAAG,EAApC,CAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAW,MAAMJ,QAAQ,CAACK,IAAT,EAAvB;AACA,QAAM;AAAElB,IAAAA,KAAF;AAASmB,IAAAA;AAAT,MAA+BF,IAAI,CAACX,UAA1C,CAN4C,CAQ5C;;AACA,QAAMc,gBAAgB,GAAG,MAAMxB,KAAK,CAAE,wEAAF,CAApC;AACA,QAAM;AAAEqB,IAAAA,IAAI,EAAEhB;AAAR,MAAqB,MAAMmB,gBAAgB,CAACF,IAAjB,EAAjC;AAEA,SAAO;AAAElB,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP;AACD,CAbD;;AAeA,eAAeF,GAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nimport Layout from '../../layouts/default'\n\nimport TitleBanner from '../../components/TitleBanner'\n\ntype JobProps = {\n  title: string,\n  sections?: [{\n    attributes: {\n      field_title: string,\n      field_body: {\n        value: string\n      }\n    }\n  }]\n}\n\nconst Job = ({ title, sections }: JobProps) => (\n  <Layout>\n    <TitleBanner title={title} />\n    {body && <div dangerouslySetInnerHTML={{ __html: body?.value }} />}\n    {\n      sections.map(({ attributes }, key) => (\n        <section key={key}>\n          <h2>{attributes.field_title}</h2>\n        </section>\n      ))\n    }\n  </Layout>\n)\n\nJob.getInitialProps = async (context: any) => {\n  const { id } = context.query\n\n  // fetch `Job`\n  const response = await fetch(`${process.env.API_ROOT}/jobs/${id}`)\n  const { data } = await response.json()\n  const { title, field_job_section } = data.attributes\n\n  // fetch `sections` from field_collection endpoint\n  const sectionsResponse = await fetch(`http://127.0.0.1:8888/jsonapi/field_collection_item/field_job_section/`)\n  const { data: sections } = await sectionsResponse.json()\n\n  return { title, sections }\n}\n\nexport default Job\n"]},"metadata":{},"sourceType":"module"}