{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/www/sites/firebreak-nextjs/src/pages/jobs/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../layouts/default';\nimport TitleBanner from '../../components/TitleBanner';\nimport ImageBanner from '../../components/ImageBanner';\nimport JobListings from '../../components/JobListings';\n\nconst JobsIndex = ({\n  jobs,\n  title,\n  body,\n  image\n}) => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, __jsx(TitleBanner, {\n  title: title,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}), __jsx(ImageBanner, _extends({}, image, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n})), __jsx(JobListings, {\n  jobs: jobs,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}));\n\nJobsIndex.getInitialProps = async () => {\n  // fetch page data\n  const pageResponse = await fetch(`${process.env.API_ROOT}/page/d531df90-0fb9-4475-bdc6-8222b22924c7`);\n  const {\n    data: page\n  } = await pageResponse.json();\n  const {\n    title,\n    body\n  } = page.attributes;\n  console.log(body); // fetch `jobs` content-types\n\n  const jobsResponse = await fetch(`${process.env.API_ROOT}/jobs/`);\n  const {\n    data: jobs\n  } = await jobsResponse.json(); // fetch `field_image`\n\n  const {\n    field_image\n  } = page.relationships;\n  const imageResponse = await fetch(`${field_image.links.related.href}`);\n  const {\n    data: image\n  } = await imageResponse.json();\n  return {\n    title,\n    body: body.processed,\n    image: {\n      path: image.attributes.uri.url,\n      alt: field_image.data.meta.alt\n    },\n    jobs\n  };\n};\n\nexport default JobsIndex;","map":{"version":3,"sources":["/www/sites/firebreak-nextjs/src/pages/jobs/index.tsx"],"names":["fetch","Layout","TitleBanner","ImageBanner","JobListings","JobsIndex","jobs","title","body","image","getInitialProps","pageResponse","process","env","API_ROOT","data","page","json","attributes","console","log","jobsResponse","field_image","relationships","imageResponse","links","related","href","processed","path","uri","url","alt","meta"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AAYA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,IAAf;AAAqBC,EAAAA;AAArB,CAAD,KAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,WAAD;AAAa,EAAA,KAAK,EAAEF,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,MAAC,WAAD,eAAiBE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFF,EAGE,MAAC,WAAD;AAAa,EAAA,IAAI,EAAEH,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,CADF;;AAQAD,SAAS,CAACK,eAAV,GAA4B,YAAY;AACtC;AACA,QAAMC,YAAY,GAAG,MAAMX,KAAK,CAAE,GAAEY,OAAO,CAACC,GAAR,CAAYC,QAAS,4CAAzB,CAAhC;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAiB,MAAML,YAAY,CAACM,IAAb,EAA7B;AACA,QAAM;AAAEV,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBQ,IAAI,CAACE,UAA7B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ,EANsC,CAQtC;;AACA,QAAMa,YAAY,GAAG,MAAMrB,KAAK,CAAE,GAAEY,OAAO,CAACC,GAAR,CAAYC,QAAS,QAAzB,CAAhC;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAET;AAAR,MAAiB,MAAMe,YAAY,CAACJ,IAAb,EAA7B,CAVsC,CAYtC;;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAkBN,IAAI,CAACO,aAA7B;AACA,QAAMC,aAAa,GAAG,MAAMxB,KAAK,CAAE,GAAEsB,WAAW,CAACG,KAAZ,CAAkBC,OAAlB,CAA0BC,IAAK,EAAnC,CAAjC;AACA,QAAM;AAAEZ,IAAAA,IAAI,EAAEN;AAAR,MAAkB,MAAMe,aAAa,CAACP,IAAd,EAA9B;AAEA,SAAO;AACLV,IAAAA,KADK;AAELC,IAAAA,IAAI,EAAEA,IAAI,CAACoB,SAFN;AAGLnB,IAAAA,KAAK,EAAE;AACLoB,MAAAA,IAAI,EAAEpB,KAAK,CAACS,UAAN,CAAiBY,GAAjB,CAAqBC,GADtB;AAELC,MAAAA,GAAG,EAAEV,WAAW,CAACP,IAAZ,CAAiBkB,IAAjB,CAAsBD;AAFtB,KAHF;AAOL1B,IAAAA;AAPK,GAAP;AASD,CA1BD;;AA4BA,eAAeD,SAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nimport Layout from '../../layouts/default'\n\nimport TitleBanner from '../../components/TitleBanner'\nimport ImageBanner from '../../components/ImageBanner'\nimport JobListings from '../../components/JobListings'\n\ntype JobsIndexProps = {\n  title: string,\n  body?: string,\n  image?: {\n    alt: string,\n    path: string\n  },\n  jobs?: []\n}\n\nconst JobsIndex = ({ jobs, title, body, image }: JobsIndexProps) => (\n  <Layout>\n    <TitleBanner title={title} />\n    <ImageBanner {...image} />\n    <JobListings jobs={jobs} />\n  </Layout>\n)\n\nJobsIndex.getInitialProps = async () => {\n  // fetch page data\n  const pageResponse = await fetch(`${process.env.API_ROOT}/page/d531df90-0fb9-4475-bdc6-8222b22924c7`)\n  const { data: page } = await pageResponse.json()\n  const { title, body } = page.attributes\n\n  console.log(body)\n\n  // fetch `jobs` content-types\n  const jobsResponse = await fetch(`${process.env.API_ROOT}/jobs/`)\n  const { data: jobs } = await jobsResponse.json()\n\n  // fetch `field_image`\n  const { field_image } = page.relationships\n  const imageResponse = await fetch(`${field_image.links.related.href}`)\n  const { data: image } = await imageResponse.json()\n\n  return {\n    title,\n    body: body.processed,\n    image: {\n      path: image.attributes.uri.url,\n      alt: field_image.data.meta.alt\n    },\n    jobs\n  }\n}\n\nexport default JobsIndex\n"]},"metadata":{},"sourceType":"module"}