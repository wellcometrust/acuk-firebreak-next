{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/www/sites/firebreak-nextjs/src/pages/jobs/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../layouts/default';\nimport TitleBanner from '../../components/TitleBanner';\n\nvar Job = function Job(_ref) {\n  var title = _ref.title,\n      sections = _ref.sections;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(TitleBanner, {\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), sections.map(function (_ref2, key) {\n    var attributes = _ref2.attributes;\n    return __jsx(\"section\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, attributes.field_title), __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: attributes.field_body.processed\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }));\n};\n/**\n * Sets initial props on the default export.\n *\n * @see https://nextjs.org/learn/basics/fetching-data-for-pages\n *\n * @todo use Promise.all() to wrap awaits; be careful of fail-fast\n *\n */\n\n\nJob.getInitialProps = function _callee(context) {\n  var id, response, _ref3, data, _data$attributes, title, field_job_section, contentIDs, sectionsResponse, _ref5, sections;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          /**\n           * Fetch all of the data for the jobs\n           */\n\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(process.env.API_ROOT, \"/jobs/\").concat(id)));\n\n        case 3:\n          response = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 6:\n          _ref3 = _context.sent;\n          data = _ref3.data;\n          _data$attributes = data.attributes, title = _data$attributes.title, field_job_section = _data$attributes.field_job_section; //\n\n          contentIDs = field_job_section.map(function (_ref4) {\n            var value = _ref4.value;\n            return value;\n          }); // fetch `sections` from field_collection endpoint\n\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(fetch(\"http://127.0.0.1:8888/jsonapi/field_collection_item/field_job_section/\"));\n\n        case 12:\n          sectionsResponse = _context.sent;\n          _context.next = 15;\n          return _regeneratorRuntime.awrap(sectionsResponse.json());\n\n        case 15:\n          _ref5 = _context.sent;\n          sections = _ref5.data;\n          return _context.abrupt(\"return\", {\n            title: title,\n            sections: sections\n          });\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Job;","map":{"version":3,"sources":["/www/sites/firebreak-nextjs/src/pages/jobs/[id].tsx"],"names":["fetch","Layout","TitleBanner","Job","title","sections","map","key","attributes","field_title","__html","field_body","processed","getInitialProps","context","id","query","process","env","API_ROOT","response","json","data","field_job_section","contentIDs","value","sectionsResponse"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;;AAcA,IAAMC,GAAG,GAAG,SAANA,GAAM;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,QAAV,QAAUA,QAAV;AAAA,SACV,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,KAAK,EAAED,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGIC,QAAQ,CAACC,GAAT,CAAa,iBAAiBC,GAAjB;AAAA,QAAGC,UAAH,SAAGA,UAAH;AAAA,WACX;AAAS,MAAA,GAAG,EAAED,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,UAAU,CAACC,WAAhB,CADF,EAEE;AAAK,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEF,UAAU,CAACG,UAAX,CAAsBC;AAAhC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADW;AAAA,GAAb,CAHJ,CADU;AAAA,CAAZ;AAcA;;;;;;;;;;AAQAT,GAAG,CAACU,eAAJ,GAAsB,iBAAOC,OAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACZC,UAAAA,EADY,GACLD,OAAO,CAACE,KADH,CACZD,EADY;AAGpB;;;;AAHoB;AAAA,2CAMGf,KAAK,WAAIiB,OAAO,CAACC,GAAR,CAAYC,QAAhB,mBAAiCJ,EAAjC,EANR;;AAAA;AAMdK,UAAAA,QANc;AAAA;AAAA,2CAOGA,QAAQ,CAACC,IAAT,EAPH;;AAAA;AAAA;AAOZC,UAAAA,IAPY,SAOZA,IAPY;AAAA,6BAQiBA,IAAI,CAACd,UARtB,EAQZJ,KARY,oBAQZA,KARY,EAQLmB,iBARK,oBAQLA,iBARK,EAUpB;;AACMC,UAAAA,UAXc,GAWDD,iBAAiB,CAACjB,GAAlB,CAAsB;AAAA,gBAAGmB,KAAH,SAAGA,KAAH;AAAA,mBAAoBA,KAApB;AAAA,WAAtB,CAXC,EAapB;;AAboB;AAAA,2CAcWzB,KAAK,0EAdhB;;AAAA;AAcd0B,UAAAA,gBAdc;AAAA;AAAA,2CAeaA,gBAAgB,CAACL,IAAjB,EAfb;;AAAA;AAAA;AAeNhB,UAAAA,QAfM,SAeZiB,IAfY;AAAA,2CAiBb;AAAElB,YAAAA,KAAK,EAALA,KAAF;AAASC,YAAAA,QAAQ,EAARA;AAAT,WAjBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAoBA,eAAeF,GAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nimport Layout from '../../layouts/default'\n\nimport TitleBanner from '../../components/TitleBanner'\n\ntype JobProps = {\n  title: string,\n  sections?: [{\n    attributes: {\n      field_title: string,\n      field_body: {\n        processed: string\n      }\n    }\n  }]\n}\n\nconst Job = ({ title, sections }: JobProps) => (\n  <Layout>\n    <TitleBanner title={title} />\n    {\n      sections.map(({ attributes }, key) => (\n        <section key={key}>\n          <h2>{attributes.field_title}</h2>\n          <div dangerouslySetInnerHTML={{ __html: attributes.field_body.processed }} />\n        </section>\n      ))\n    }\n  </Layout>\n)\n\n/**\n * Sets initial props on the default export.\n *\n * @see https://nextjs.org/learn/basics/fetching-data-for-pages\n *\n * @todo use Promise.all() to wrap awaits; be careful of fail-fast\n *\n */\nJob.getInitialProps = async (context: any) => {\n  const { id } = context.query\n\n  /**\n   * Fetch all of the data for the jobs\n   */\n  const response = await fetch(`${process.env.API_ROOT}/jobs/${id}`)\n  const { data } = await response.json()\n  const { title, field_job_section } = data.attributes\n\n  //\n  const contentIDs = field_job_section.map(({ value }: any) => value)\n\n  // fetch `sections` from field_collection endpoint\n  const sectionsResponse = await fetch(`http://127.0.0.1:8888/jsonapi/field_collection_item/field_job_section/`)\n  const { data: sections } = await sectionsResponse.json()\n\n  return { title, sections }\n}\n\nexport default Job\n"]},"metadata":{},"sourceType":"module"}