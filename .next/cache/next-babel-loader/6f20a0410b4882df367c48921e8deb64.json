{"ast":null,"code":"var _jsxFileName = \"/www/sites/firebreak-nextjs/src/pages/jobs/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../layouts/default';\nimport TitleBanner from '../../components/TitleBanner';\nimport Section from '../../components/Section';\n\nconst Job = ({\n  title,\n  sections\n}) => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, __jsx(TitleBanner, {\n  title: title,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}), sections.map(({\n  attributes\n}, key) => __jsx(Section, {\n  key: key,\n  title: attributes.field_title,\n  body: attributes.field_body.processed,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n})));\n/**\n * Sets initial props on the default export.\n *\n * @see https://nextjs.org/learn/basics/fetching-data-for-pages\n *\n * @todo use Promise.all() to wrap awaits; be careful of fail-fast\n *\n */\n\n\nJob.getInitialProps = async context => {\n  const {\n    id\n  } = context.query; // Fetch this page\n\n  const response = await fetch(`${process.env.API_ROOT}/jobs/${id}`);\n  const {\n    data\n  } = await response.json();\n  const {\n    title,\n    field_job_section: content\n  } = data.attributes; // Gather IDs for field_job_section relations\n\n  const contentIDs = content.map(({\n    value\n  }) => value); // Fetch related field_collection entities\n\n  const allSectionsResponse = await fetch(`http://127.0.0.1:8888/jsonapi/field_collection_item/field_job_section/`);\n  const {\n    data: allSections\n  } = await allSectionsResponse.json();\n  const sections = allSections.filter(({\n    attributes\n  }) => contentIDs.indexOf(attributes.drupal_internal__item_id) !== -1);\n  return {\n    title,\n    sections\n  };\n};\n\nexport default Job;","map":{"version":3,"sources":["/www/sites/firebreak-nextjs/src/pages/jobs/[id].tsx"],"names":["fetch","Layout","TitleBanner","Section","Job","title","sections","map","attributes","key","field_title","field_body","processed","getInitialProps","context","id","query","response","process","env","API_ROOT","data","json","field_job_section","content","contentIDs","value","allSectionsResponse","allSections","filter","indexOf","drupal_internal__item_id"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAcA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KACV,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,WAAD;AAAa,EAAA,KAAK,EAAED,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAGIC,QAAQ,CAACC,GAAT,CAAa,CAAC;AAAEC,EAAAA;AAAF,CAAD,EAAiBC,GAAjB,KACX,MAAC,OAAD;AACE,EAAA,GAAG,EAAEA,GADP;AAEE,EAAA,KAAK,EAAED,UAAU,CAACE,WAFpB;AAGE,EAAA,IAAI,EAAEF,UAAU,CAACG,UAAX,CAAsBC,SAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAHJ,CADF;AAeA;;;;;;;;;;AAQAR,GAAG,CAACS,eAAJ,GAAsB,MAAOC,OAAP,IAAwB;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,KAAvB,CAD4C,CAG5C;;AACA,QAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAAE,GAAEkB,OAAO,CAACC,GAAR,CAAYC,QAAS,SAAQL,EAAG,EAApC,CAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAW,MAAMJ,QAAQ,CAACK,IAAT,EAAvB;AACA,QAAM;AAAEjB,IAAAA,KAAF;AAASkB,IAAAA,iBAAiB,EAAEC;AAA5B,MAAwCH,IAAI,CAACb,UAAnD,CAN4C,CAQ5C;;AACA,QAAMiB,UAAU,GAAGD,OAAO,CAACjB,GAAR,CAAY,CAAC;AAAEmB,IAAAA;AAAF,GAAD,KAAoBA,KAAhC,CAAnB,CAT4C,CAW5C;;AACA,QAAMC,mBAAmB,GAAG,MAAM3B,KAAK,CAAE,wEAAF,CAAvC;AACA,QAAM;AAAEqB,IAAAA,IAAI,EAAEO;AAAR,MAAwB,MAAMD,mBAAmB,CAACL,IAApB,EAApC;AACA,QAAMhB,QAAQ,GAAGsB,WAAW,CAACC,MAAZ,CAAmB,CAAC;AAAErB,IAAAA;AAAF,GAAD,KAAyBiB,UAAU,CAACK,OAAX,CAAmBtB,UAAU,CAACuB,wBAA9B,MAA4D,CAAC,CAAzG,CAAjB;AAEA,SAAO;AAAE1B,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP;AACD,CAjBD;;AAmBA,eAAeF,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport fetch from 'isomorphic-unfetch'\n\nimport Layout from '../../layouts/default'\n\nimport TitleBanner from '../../components/TitleBanner'\nimport Section from '../../components/Section'\n\ntype JobProps = {\n  title: string,\n  sections?: [{\n    attributes: {\n      field_title: string,\n      field_body: {\n        processed: string\n      }\n    }\n  }]\n}\n\nconst Job = ({ title, sections }: JobProps) => (\n  <Layout>\n    <TitleBanner title={title} />\n    {\n      sections.map(({ attributes }, key) =>\n        <Section\n          key={key}\n          title={attributes.field_title}\n          body={attributes.field_body.processed}\n        />\n      )\n    }\n  </Layout>\n)\n\n/**\n * Sets initial props on the default export.\n *\n * @see https://nextjs.org/learn/basics/fetching-data-for-pages\n *\n * @todo use Promise.all() to wrap awaits; be careful of fail-fast\n *\n */\nJob.getInitialProps = async (context: any) => {\n  const { id } = context.query\n\n  // Fetch this page\n  const response = await fetch(`${process.env.API_ROOT}/jobs/${id}`)\n  const { data } = await response.json()\n  const { title, field_job_section: content } = data.attributes\n\n  // Gather IDs for field_job_section relations\n  const contentIDs = content.map(({ value }: any) => value)\n\n  // Fetch related field_collection entities\n  const allSectionsResponse = await fetch(`http://127.0.0.1:8888/jsonapi/field_collection_item/field_job_section/`)\n  const { data: allSections } = await allSectionsResponse.json()\n  const sections = allSections.filter(({ attributes }: any) => contentIDs.indexOf(attributes.drupal_internal__item_id) !== -1)\n\n  return { title, sections }\n}\n\nexport default Job\n"]},"metadata":{},"sourceType":"module"}