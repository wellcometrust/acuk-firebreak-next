{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/www/sites/firebreak-nextjs/src/pages/jobs/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../layouts/default';\n\nvar Job = function Job(_ref) {\n  var title = _ref.title,\n      body = _ref.body,\n      sections = _ref.sections;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, title), body && __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: body === null || body === void 0 ? void 0 : body.value\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), sections.map(function (_ref2, key) {\n    var _attributes$field_bod;\n\n    var attributes = _ref2.attributes;\n    return __jsx(\"section\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, attributes.field_title), __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: (_attributes$field_bod = attributes.field_body) === null || _attributes$field_bod === void 0 ? void 0 : _attributes$field_bod.value\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  })));\n};\n\nJob.getInitialProps = function _callee(context) {\n  var id, response, _ref3, data, _data$attributes, title, body, field_job_section, newResponse, _ref4, sections;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"http://127.0.0.1:8888/jsonapi/node/jobs/\".concat(id)));\n\n        case 3:\n          response = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 6:\n          _ref3 = _context.sent;\n          data = _ref3.data;\n          _data$attributes = data.attributes, title = _data$attributes.title, body = _data$attributes.body, field_job_section = _data$attributes.field_job_section;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(fetch(\"http://127.0.0.1:8888/jsonapi/field_collection_item/field_job_section/\"));\n\n        case 11:\n          newResponse = _context.sent;\n          _context.next = 14;\n          return _regeneratorRuntime.awrap(newResponse.json());\n\n        case 14:\n          _ref4 = _context.sent;\n          sections = _ref4.data;\n          return _context.abrupt(\"return\", {\n            title: title,\n            body: body,\n            sections: sections\n          });\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Job;","map":{"version":3,"sources":["/www/sites/firebreak-nextjs/src/pages/jobs/[id].tsx"],"names":["fetch","Layout","Job","title","body","sections","__html","value","map","key","attributes","field_title","field_body","getInitialProps","context","id","query","response","json","data","field_job_section","newResponse"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;;AAiBA,IAAMC,GAAG,GAAG,SAANA,GAAM;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,IAAV,QAAUA,IAAV;AAAA,MAAgBC,QAAhB,QAAgBA,QAAhB;AAAA,SACV,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAL,CADF,EAEGC,IAAI,IAAI;AAAK,IAAA,uBAAuB,EAAE;AAAEE,MAAAA,MAAM,EAAEF,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEG;AAAhB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFX,EAIIF,QAAQ,CAACG,GAAT,CAAa,iBAAiBC,GAAjB;AAAA;;AAAA,QAAGC,UAAH,SAAGA,UAAH;AAAA,WACX;AAAS,MAAA,GAAG,EAAED,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,UAAU,CAACC,WAAhB,CADF,EAEE;AAAK,MAAA,uBAAuB,EAAE;AAAEL,QAAAA,MAAM,2BAAEI,UAAU,CAACE,UAAb,0DAAE,sBAAuBL;AAAjC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADW;AAAA,GAAb,CAJJ,CADF,CADU;AAAA,CAAZ;;AAiBAL,GAAG,CAACW,eAAJ,GAAsB,iBAAOC,OAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACZC,UAAAA,EADY,GACLD,OAAO,CAACE,KADH,CACZD,EADY;AAAA;AAAA,2CAEGf,KAAK,mDAA4Ce,EAA5C,EAFR;;AAAA;AAEdE,UAAAA,QAFc;AAAA;AAAA,2CAGGA,QAAQ,CAACC,IAAT,EAHH;;AAAA;AAAA;AAGZC,UAAAA,IAHY,SAGZA,IAHY;AAAA,6BAIuBA,IAAI,CAACT,UAJ5B,EAIZP,KAJY,oBAIZA,KAJY,EAILC,IAJK,oBAILA,IAJK,EAICgB,iBAJD,oBAICA,iBAJD;AAAA;AAAA,2CAMMpB,KAAK,0EANX;;AAAA;AAMdqB,UAAAA,WANc;AAAA;AAAA,2CAOaA,WAAW,CAACH,IAAZ,EAPb;;AAAA;AAAA;AAONb,UAAAA,QAPM,SAOZc,IAPY;AAAA,2CASb;AAAEhB,YAAAA,KAAK,EAALA,KAAF;AAASC,YAAAA,IAAI,EAAJA,IAAT;AAAeC,YAAAA,QAAQ,EAARA;AAAf,WATa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAYA,eAAeH,GAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nimport Layout from '../../layouts/default'\n\ntype JobProps = {\n  title: string\n  body?: {\n    value: string\n  }\n  sections?: [{\n    attributes: {\n      field_title: string\n      field_body: {\n        value: string\n      }\n    }\n  }]\n}\n\nconst Job = ({ title, body, sections }: JobProps) => (\n  <Layout>\n    <div>\n      <h1>{title}</h1>\n      {body && <div dangerouslySetInnerHTML={{ __html: body?.value }} />}\n      {\n        sections.map(({ attributes }, key) => (\n          <section key={key}>\n            <h2>{attributes.field_title}</h2>\n            <div dangerouslySetInnerHTML={{ __html: attributes.field_body?.value }} />\n          </section>\n        ))\n      }\n    </div>\n  </Layout>\n)\n\nJob.getInitialProps = async (context: any) => {\n  const { id } = context.query\n  const response = await fetch(`http://127.0.0.1:8888/jsonapi/node/jobs/${id}`)\n  const { data } = await response.json()\n  const { title, body, field_job_section } = data.attributes\n\n  const newResponse = await fetch(`http://127.0.0.1:8888/jsonapi/field_collection_item/field_job_section/`)\n  const { data: sections } = await newResponse.json()\n\n  return { title, body, sections }\n}\n\nexport default Job"]},"metadata":{},"sourceType":"module"}