{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/www/sites/firebreak-nextjs/src/pages/jobs/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../layouts/default';\nimport TitleBanner from '../../components/TitleBanner';\nimport ImageBanner from '../../components/ImageBanner';\nimport JobListings from '../../components/JobListings';\n\nvar JobsIndex = function JobsIndex(_ref) {\n  var title = _ref.title,\n      body = _ref.body,\n      image = _ref.image;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(TitleBanner, {\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), __jsx(ImageBanner, _extends({}, image, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), __jsx(JobListings, {\n    jobs: jobs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n};\n\nexport default JobsIndex;\n\nJobsIndex.getInitialProps = function _callee() {\n  var pageResponse, _ref2, page, _page$attributes, title, body, field_image, imageResponse, _ref3, image;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(process.env.API_ROOT, \"/page/d531df90-0fb9-4475-bdc6-8222b22924c7\")));\n\n        case 2:\n          pageResponse = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(pageResponse.json());\n\n        case 5:\n          _ref2 = _context.sent;\n          page = _ref2.data;\n          _page$attributes = page.attributes, title = _page$attributes.title, body = _page$attributes.body; // fetch `field_image` separately because data is on separate endpoint\n\n          field_image = page.relationships.field_image;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(field_image.links.related.href)));\n\n        case 11:\n          imageResponse = _context.sent;\n          _context.next = 14;\n          return _regeneratorRuntime.awrap(imageResponse.json());\n\n        case 14:\n          _ref3 = _context.sent;\n          image = _ref3.data;\n          return _context.abrupt(\"return\", {\n            title: title,\n            body: body,\n            image: {\n              path: image.attributes.uri.url,\n              alt: field_image.data.meta.alt\n            },\n            jobs: jobs\n          });\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/www/sites/firebreak-nextjs/src/pages/jobs/index.tsx"],"names":["fetch","Layout","TitleBanner","ImageBanner","JobListings","JobsIndex","title","body","image","jobs","getInitialProps","process","env","API_ROOT","pageResponse","json","page","data","attributes","field_image","relationships","links","related","href","imageResponse","path","uri","url","alt","meta"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AAWA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,IAAV,QAAUA,IAAV;AAAA,MAAgBC,KAAhB,QAAgBA,KAAhB;AAAA,SAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEF,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,WAAD,eAAiBE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAGE,MAAC,WAAD;AAAa,IAAA,IAAI,EAAEC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADgB;AAAA,CAAlB;;AAQA,eAAeJ,SAAf;;AAEAA,SAAS,CAACK,eAAV,GAA4B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAQCV,KAAK,WAAIW,OAAO,CAACC,GAAR,CAAYC,QAAhB,gDARN;;AAAA;AAQpBC,UAAAA,YARoB;AAAA;AAAA,2CASGA,YAAY,CAACC,IAAb,EATH;;AAAA;AAAA;AASZC,UAAAA,IATY,SASlBC,IATkB;AAAA,6BAUFD,IAAI,CAACE,UAVH,EAUlBZ,KAVkB,oBAUlBA,KAVkB,EAUXC,IAVW,oBAUXA,IAVW,EAY1B;;AACQY,UAAAA,WAbkB,GAaFH,IAAI,CAACI,aAbH,CAalBD,WAbkB;AAAA;AAAA,2CAcEnB,KAAK,WAAImB,WAAW,CAACE,KAAZ,CAAkBC,OAAlB,CAA0BC,IAA9B,EAdP;;AAAA;AAcpBC,UAAAA,aAdoB;AAAA;AAAA,2CAeIA,aAAa,CAACT,IAAd,EAfJ;;AAAA;AAAA;AAeZP,UAAAA,KAfY,SAelBS,IAfkB;AAAA,2CAiBnB;AACLX,YAAAA,KAAK,EAALA,KADK;AAELC,YAAAA,IAAI,EAAJA,IAFK;AAGLC,YAAAA,KAAK,EAAE;AACLiB,cAAAA,IAAI,EAAEjB,KAAK,CAACU,UAAN,CAAiBQ,GAAjB,CAAqBC,GADtB;AAELC,cAAAA,GAAG,EAAET,WAAW,CAACF,IAAZ,CAAiBY,IAAjB,CAAsBD;AAFtB,aAHF;AAOLnB,YAAAA,IAAI,EAAJA;AAPK,WAjBmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nimport Layout from '../../layouts/default'\n\nimport TitleBanner from '../../components/TitleBanner'\nimport ImageBanner from '../../components/ImageBanner'\nimport JobListings from '../../components/JobListings'\n\ntype JobsIndexProps = {\n  title: string,\n  body?: string,\n  image?: {\n    alt: string,\n    path: string\n  },\n}\n\nconst JobsIndex = ({ title, body, image }: JobsIndexProps) => (\n  <Layout>\n    <TitleBanner title={title} />\n    <ImageBanner {...image} />\n    <JobListings jobs={jobs} />\n  </Layout>\n)\n\nexport default JobsIndex\n\nJobsIndex.getInitialProps = async () => {\n  /**\n   * Fetch all of the data for the page from our API as the initial\n   * props.\n   *\n   * @todo `page` API endpoint should contain field_image data\n   *\n   */\n  const pageResponse = await fetch(`${process.env.API_ROOT}/page/d531df90-0fb9-4475-bdc6-8222b22924c7`)\n  const { data: page } = await pageResponse.json()\n  const { title, body } = page.attributes\n\n  // fetch `field_image` separately because data is on separate endpoint\n  const { field_image } = page.relationships\n  const imageResponse = await fetch(`${field_image.links.related.href}`)\n  const { data: image } = await imageResponse.json()\n\n  return {\n    title,\n    body,\n    image: {\n      path: image.attributes.uri.url,\n      alt: field_image.data.meta.alt\n    },\n    jobs\n  }\n}\n"]},"metadata":{},"sourceType":"module"}