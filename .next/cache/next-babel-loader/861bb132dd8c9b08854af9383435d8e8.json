{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/www/sites/firebreak-nextjs/src/pages/jobs/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../layouts/default';\nimport TitleBanner from '../../components/TitleBanner';\nimport Section from '../../components/Section';\n\nvar Job = function Job(_ref) {\n  var title = _ref.title,\n      sections = _ref.sections;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(TitleBanner, {\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), sections.map(function (_ref2, key) {\n    var attributes = _ref2.attributes;\n    return __jsx(Section, {\n      key: key,\n      title: attributes.field_title,\n      body: attributes.field_body.processed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    });\n  }));\n};\n/**\n * Sets initial props on the default export.\n *\n * @see https://nextjs.org/learn/basics/fetching-data-for-pages\n *\n * @todo use Promise.all() to wrap awaits; be careful of fail-fast\n *\n */\n\n\nJob.getInitialProps = function _callee(context) {\n  var id, response, _ref3, data, _data$attributes, title, content, contentIDs, allSectionsResponse, _ref5, allSections, sections;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id; // Fetch this page\n\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(process.env.API_ROOT, \"/jobs/\").concat(id)));\n\n        case 3:\n          response = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 6:\n          _ref3 = _context.sent;\n          data = _ref3.data;\n          _data$attributes = data.attributes, title = _data$attributes.title, content = _data$attributes.field_job_section; // Gather IDs for field_job_section relations\n\n          contentIDs = content.map(function (_ref4) {\n            var value = _ref4.value;\n            return value;\n          }); // Fetch related field_collection entities\n\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(fetch(\"http://127.0.0.1:8888/jsonapi/field_collection_item/field_job_section/\"));\n\n        case 12:\n          allSectionsResponse = _context.sent;\n          _context.next = 15;\n          return _regeneratorRuntime.awrap(allSectionsResponse.json());\n\n        case 15:\n          _ref5 = _context.sent;\n          allSections = _ref5.data;\n          sections = allSections.filter(function (_ref6) {\n            var attributes = _ref6.attributes;\n            return contentIDs.indexOf(attributes.drupal_internal__item_id) !== -1;\n          });\n          return _context.abrupt(\"return\", {\n            title: title,\n            sections: sections\n          });\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Job;","map":{"version":3,"sources":["/www/sites/firebreak-nextjs/src/pages/jobs/[id].tsx"],"names":["fetch","Layout","TitleBanner","Section","Job","title","sections","map","key","attributes","field_title","field_body","processed","getInitialProps","context","id","query","process","env","API_ROOT","response","json","data","content","field_job_section","contentIDs","value","allSectionsResponse","allSections","filter","indexOf","drupal_internal__item_id"],"mappings":";;;;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAcA,IAAMC,GAAG,GAAG,SAANA,GAAM;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,QAAV,QAAUA,QAAV;AAAA,SACV,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,KAAK,EAAED,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGIC,QAAQ,CAACC,GAAT,CAAa,iBAAiBC,GAAjB;AAAA,QAAGC,UAAH,SAAGA,UAAH;AAAA,WACX,MAAC,OAAD;AACE,MAAA,GAAG,EAAED,GADP;AAEE,MAAA,KAAK,EAAEC,UAAU,CAACC,WAFpB;AAGE,MAAA,IAAI,EAAED,UAAU,CAACE,UAAX,CAAsBC,SAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW;AAAA,GAAb,CAHJ,CADU;AAAA,CAAZ;AAeA;;;;;;;;;;AAQAR,GAAG,CAACS,eAAJ,GAAsB,iBAAOC,OAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACZC,UAAAA,EADY,GACLD,OAAO,CAACE,KADH,CACZD,EADY,EAGpB;;AAHoB;AAAA,2CAIGf,KAAK,WAAIiB,OAAO,CAACC,GAAR,CAAYC,QAAhB,mBAAiCJ,EAAjC,EAJR;;AAAA;AAIdK,UAAAA,QAJc;AAAA;AAAA,2CAKGA,QAAQ,CAACC,IAAT,EALH;;AAAA;AAAA;AAKZC,UAAAA,IALY,SAKZA,IALY;AAAA,6BAM0BA,IAAI,CAACb,UAN/B,EAMZJ,KANY,oBAMZA,KANY,EAMckB,OANd,oBAMLC,iBANK,EAQpB;;AACMC,UAAAA,UATc,GASDF,OAAO,CAAChB,GAAR,CAAY;AAAA,gBAAGmB,KAAH,SAAGA,KAAH;AAAA,mBAAoBA,KAApB;AAAA,WAAZ,CATC,EAWpB;;AAXoB;AAAA,2CAYc1B,KAAK,0EAZnB;;AAAA;AAYd2B,UAAAA,mBAZc;AAAA;AAAA,2CAagBA,mBAAmB,CAACN,IAApB,EAbhB;;AAAA;AAAA;AAaNO,UAAAA,WAbM,SAaZN,IAbY;AAcdhB,UAAAA,QAdc,GAcHsB,WAAW,CAACC,MAAZ,CAAmB;AAAA,gBAAGpB,UAAH,SAAGA,UAAH;AAAA,mBAAyBgB,UAAU,CAACK,OAAX,CAAmBrB,UAAU,CAACsB,wBAA9B,MAA4D,CAAC,CAAtF;AAAA,WAAnB,CAdG;AAAA,2CAgBb;AAAE1B,YAAAA,KAAK,EAALA,KAAF;AAASC,YAAAA,QAAQ,EAARA;AAAT,WAhBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAmBA,eAAeF,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport fetch from 'isomorphic-unfetch'\n\nimport Layout from '../../layouts/default'\n\nimport TitleBanner from '../../components/TitleBanner'\nimport Section from '../../components/Section'\n\ntype JobProps = {\n  title: string,\n  sections?: [{\n    attributes: {\n      field_title: string,\n      field_body: {\n        processed: string\n      }\n    }\n  }]\n}\n\nconst Job = ({ title, sections }: JobProps) => (\n  <Layout>\n    <TitleBanner title={title} />\n    {\n      sections.map(({ attributes }, key) =>\n        <Section\n          key={key}\n          title={attributes.field_title}\n          body={attributes.field_body.processed}\n        />\n      )\n    }\n  </Layout>\n)\n\n/**\n * Sets initial props on the default export.\n *\n * @see https://nextjs.org/learn/basics/fetching-data-for-pages\n *\n * @todo use Promise.all() to wrap awaits; be careful of fail-fast\n *\n */\nJob.getInitialProps = async (context: any) => {\n  const { id } = context.query\n\n  // Fetch this page\n  const response = await fetch(`${process.env.API_ROOT}/jobs/${id}`)\n  const { data } = await response.json()\n  const { title, field_job_section: content } = data.attributes\n\n  // Gather IDs for field_job_section relations\n  const contentIDs = content.map(({ value }: any) => value)\n\n  // Fetch related field_collection entities\n  const allSectionsResponse = await fetch(`http://127.0.0.1:8888/jsonapi/field_collection_item/field_job_section/`)\n  const { data: allSections } = await allSectionsResponse.json()\n  const sections = allSections.filter(({ attributes }: any) => contentIDs.indexOf(attributes.drupal_internal__item_id) !== -1)\n\n  return { title, sections }\n}\n\nexport default Job\n"]},"metadata":{},"sourceType":"module"}