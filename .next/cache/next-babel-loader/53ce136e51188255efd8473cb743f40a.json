{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/www/sites/firebreak-nextjs/src/pages/jobs/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../layouts/default';\nimport Listing from '../../components/Listing';\n\nvar JobsIndex = function JobsIndex(_ref) {\n  var jobs = _ref.jobs,\n      title = _ref.title;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Homepage\"), jobs.map(function (_ref2, key) {\n    var id = _ref2.id,\n        attributes = _ref2.attributes;\n    return __jsx(Listing, _extends({\n      type: \"job\",\n      id: id,\n      key: key\n    }, attributes, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }));\n  }));\n};\n\nJobsIndex.getInitialProps = function _callee() {\n  var pageResponse, _ref3, page, _page$attributes, title, body, jobsResponse, _ref4, jobs;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://127.0.0.1:8888/jsonapi/node/page/d531df90-0fb9-4475-bdc6-8222b22924c7'));\n\n        case 2:\n          pageResponse = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(pageResponse.json());\n\n        case 5:\n          _ref3 = _context.sent;\n          page = _ref3.data;\n          _page$attributes = page.attributes, title = _page$attributes.title, body = _page$attributes.body;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(fetch('http://127.0.0.1:8888/jsonapi/node/jobs/'));\n\n        case 10:\n          jobsResponse = _context.sent;\n          _context.next = 13;\n          return _regeneratorRuntime.awrap(jobsResponse.json());\n\n        case 13:\n          _ref4 = _context.sent;\n          jobs = _ref4.data;\n          return _context.abrupt(\"return\", {\n            title: title,\n            body: body,\n            jobs: jobs\n          });\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default JobsIndex;","map":{"version":3,"sources":["/www/sites/firebreak-nextjs/src/pages/jobs/index.tsx"],"names":["fetch","Layout","Listing","JobsIndex","jobs","title","map","key","id","attributes","getInitialProps","pageResponse","json","page","data","body","jobsResponse"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AAGA,OAAOC,OAAP,MAAoB,0BAApB;;AAQA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,KAAT,QAASA,KAAT;AAAA,SAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAGID,IAAI,CAACE,GAAL,CAAS,iBAAqBC,GAArB;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOC,UAAP,SAAOA,UAAP;AAAA,WACP,MAAC,OAAD;AACE,MAAA,IAAI,OADN;AAEE,MAAA,EAAE,EAAED,EAFN;AAGE,MAAA,GAAG,EAAED;AAHP,OAIME,UAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADO;AAAA,GAAT,CAHJ,CADgB;AAAA,CAAlB;;AAgBAN,SAAS,CAACO,eAAV,GAA4B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACCV,KAAK,CAAC,8EAAD,CADN;;AAAA;AACpBW,UAAAA,YADoB;AAAA;AAAA,2CAEGA,YAAY,CAACC,IAAb,EAFH;;AAAA;AAAA;AAEZC,UAAAA,IAFY,SAElBC,IAFkB;AAAA,6BAGFD,IAAI,CAACJ,UAHH,EAGlBJ,KAHkB,oBAGlBA,KAHkB,EAGXU,IAHW,oBAGXA,IAHW;AAAA;AAAA,2CAKCf,KAAK,CAAC,0CAAD,CALN;;AAAA;AAKpBgB,UAAAA,YALoB;AAAA;AAAA,2CAMGA,YAAY,CAACJ,IAAb,EANH;;AAAA;AAAA;AAMZR,UAAAA,IANY,SAMlBU,IANkB;AAAA,2CAQnB;AACLT,YAAAA,KAAK,EAALA,KADK;AAELU,YAAAA,IAAI,EAAJA,IAFK;AAGLX,YAAAA,IAAI,EAAJA;AAHK,WARmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAeA,eAAeD,SAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nimport Layout from '../../layouts/default'\n\nimport TitleBanner from '../../components/TitleBanner'\nimport Listing from '../../components/Listing'\n\ntype JobsIndexProps = {\n  title: string,\n  body?: string,\n  jobs?: []\n}\n\nconst JobsIndex = ({ jobs, title }: JobsIndexProps) => (\n  <Layout>\n    <h1>Homepage</h1>\n    {\n      jobs.map(({ id, attributes }, key) => \n        <Listing \n          type={`job`}\n          id={id} \n          key={key}\n          {...attributes}\n        />\n      )\n    }\n  </Layout>\n)\n\nJobsIndex.getInitialProps = async () => {\n  const pageResponse = await fetch('http://127.0.0.1:8888/jsonapi/node/page/d531df90-0fb9-4475-bdc6-8222b22924c7')\n  const { data: page } = await pageResponse.json()\n  const { title, body } = page.attributes\n\n  const jobsResponse = await fetch('http://127.0.0.1:8888/jsonapi/node/jobs/')\n  const { data: jobs } = await jobsResponse.json()\n\n  return { \n    title,\n    body,\n    jobs\n  }\n}\n\nexport default JobsIndex"]},"metadata":{},"sourceType":"module"}